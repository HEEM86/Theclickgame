{"ast":null,"code":"import { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nvar _jsxFileName = \"C:\\\\Users\\\\HEEM\\\\Desktop\\\\HomeWork\\\\Theclickgame\\\\src\\\\App.js\";\nimport React, { Component } from \"react\";\nimport FruitsCard from \"./components/FruitsCard\";\nimport Wrapper from \"./components/Wrapper\";\nimport Title from \"./components/Title\";\nimport fruits from \"./fruits.json\";\n\nclass App extends Component {\n  constructor(...args) {\n    super(...args);\n    this.state = {\n      isGuessCorrect: true,\n      fruits: fruits,\n      score: 0,\n      maxScore: 12,\n      message: \"Click on an image to begin\"\n    };\n\n    this.sortInfo = fruits => {\n      let index = 11;\n      let temporary;\n      let random;\n\n      while (index > 0) {\n        random = Math.floor(Math.random() * (index + 1));\n        temporary = fruits[index];\n        fruits[index] = fruits[random];\n        data[random] = temporary;\n        index--;\n      }\n\n      return fruits;\n    };\n\n    this.saveHandleClick = id => {\n      console.log(\"clicked\"); // let fruits = this.state.fruits;\n      // let fruitsClicked = fruits.filter(fruits => fruits.id === id);\n    };\n  }\n\n  componentDidMount() {\n    this.setState({\n      fruits: this.sortInfo(this.state.fruits)\n    });\n  }\n\n  // Map over this.state.fruits and render a fruitCard component for each fruit object\n  render() {\n    console.log(this.state.fruits[0]);\n    return () => /*#__PURE__*/_jsxDEV(Wrapper, {\n      children: [/*#__PURE__*/_jsxDEV(Title, {\n        children: \"Fruits List\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 48,\n        columnNumber: 9\n      }, this), this.state.fruits.map(fruits => {\n        /*#__PURE__*/\n        _jsxDEV(FruitsCard, {\n          id: fruits.id,\n          name: fruits.name,\n          image: fruits.image,\n          clicked: fruits.clicked,\n          OnClick: this.saveHandleClick\n        }, fruits.id, false, {\n          fileName: _jsxFileName,\n          lineNumber: 51,\n          columnNumber: 11\n        }, this);\n      })]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 47,\n      columnNumber: 7\n    }, this);\n  }\n\n}\n\nexport default App;","map":{"version":3,"sources":["C:/Users/HEEM/Desktop/HomeWork/Theclickgame/src/App.js"],"names":["React","Component","FruitsCard","Wrapper","Title","fruits","App","state","isGuessCorrect","score","maxScore","message","sortInfo","index","temporary","random","Math","floor","data","saveHandleClick","id","console","log","componentDidMount","setState","render","map","name","image","clicked"],"mappings":";;AAAA,OAAOA,KAAP,IAAgBC,SAAhB,QAAiC,OAAjC;AACA,OAAOC,UAAP,MAAuB,yBAAvB;AACA,OAAOC,OAAP,MAAoB,sBAApB;AACA,OAAOC,KAAP,MAAkB,oBAAlB;AACA,OAAOC,MAAP,MAAmB,eAAnB;;AAEA,MAAMC,GAAN,SAAkBL,SAAlB,CAA4B;AAAA;AAAA;AAAA,SAExBM,KAFwB,GAEhB;AAENC,MAAAA,cAAc,EAAE,IAFV;AAGNH,MAAAA,MAAM,EAAEA,MAHF;AAINI,MAAAA,KAAK,EAAE,CAJD;AAKNC,MAAAA,QAAQ,EAAE,EALJ;AAMNC,MAAAA,OAAO,EAAE;AANH,KAFgB;;AAAA,SAiB1BC,QAjB0B,GAiBhBP,MAAD,IAAY;AACnB,UAAIQ,KAAK,GAAG,EAAZ;AACA,UAAIC,SAAJ;AACA,UAAIC,MAAJ;;AACA,aAAMF,KAAK,GAAG,CAAd,EAAgB;AACdE,QAAAA,MAAM,GAACC,IAAI,CAACC,KAAL,CAAWD,IAAI,CAACD,MAAL,MAAeF,KAAK,GAAG,CAAvB,CAAX,CAAP;AACAC,QAAAA,SAAS,GAACT,MAAM,CAACQ,KAAD,CAAhB;AACAR,QAAAA,MAAM,CAACQ,KAAD,CAAN,GAAcR,MAAM,CAACU,MAAD,CAApB;AACAG,QAAAA,IAAI,CAACH,MAAD,CAAJ,GAAaD,SAAb;AACAD,QAAAA,KAAK;AACN;;AACD,aAAOR,MAAP;AACD,KA7ByB;;AAAA,SA+B1Bc,eA/B0B,GA+BRC,EAAE,IAAI;AACtBC,MAAAA,OAAO,CAACC,GAAR,CAAY,SAAZ,EADsB,CAEtB;AACA;AACD,KAnCyB;AAAA;;AAa1BC,EAAAA,iBAAiB,GAAE;AACnB,SAAKC,QAAL,CAAc;AAACnB,MAAAA,MAAM,EAAC,KAAKO,QAAL,CAAc,KAAKL,KAAL,CAAWF,MAAzB;AAAR,KAAd;AACC;;AAqBD;AACAoB,EAAAA,MAAM,GAAG;AACPJ,IAAAA,OAAO,CAACC,GAAR,CAAY,KAAKf,KAAL,CAAWF,MAAX,CAAkB,CAAlB,CAAZ;AACA,WAAO,mBACL,QAAC,OAAD;AAAA,8BACE,QAAC,KAAD;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,cADF,EAEG,KAAKE,KAAL,CAAWF,MAAX,CAAkBqB,GAAlB,CAAsBrB,MAAM,IAAI;AAE/B;AAAA,gBAAC,UAAD;AAEA,UAAA,EAAE,EAAEA,MAAM,CAACe,EAFX;AAGA,UAAA,IAAI,EAAEf,MAAM,CAACsB,IAHb;AAIA,UAAA,KAAK,EAAEtB,MAAM,CAACuB,KAJd;AAKA,UAAA,OAAO,EAAEvB,MAAM,CAACwB,OALhB;AAMA,UAAA,OAAO,EAAE,KAAKV;AANd,WACKd,MAAM,CAACe,EADZ;AAAA;AAAA;AAAA;AAAA;AAQD,OAVA,CAFH;AAAA;AAAA;AAAA;AAAA;AAAA,YADF;AAiBD;;AAxDyB;;AA2D5B,eAAed,GAAf","sourcesContent":["import React, { Component } from \"react\";\nimport FruitsCard from \"./components/FruitsCard\";\nimport Wrapper from \"./components/Wrapper\";\nimport Title from \"./components/Title\";\nimport fruits from \"./fruits.json\";\n\nclass App extends Component {\n  // Setting this.state.fruits to the fruits json array\n    state = {\n\n      isGuessCorrect: true,\n      fruits: fruits,\n      score: 0,\n      maxScore: 12,\n      message: \"Click on an image to begin\"\n\n    \n  }\n\n  componentDidMount(){\n  this.setState({fruits:this.sortInfo(this.state.fruits)})\n  }\n\n  sortInfo=(fruits) => {\n    let index = 11;\n    let temporary;\n    let random;\n    while(index > 0){\n      random=Math.floor(Math.random()*(index + 1))\n      temporary=fruits[index]\n      fruits[index]=fruits[random]\n      data[random]=temporary\n      index--\n    }\n    return fruits;\n  }\n\n  saveHandleClick = id => {\n    console.log(\"clicked\")\n    // let fruits = this.state.fruits;\n    // let fruitsClicked = fruits.filter(fruits => fruits.id === id);\n  }\n  // Map over this.state.fruits and render a fruitCard component for each fruit object\n  render() {\n    console.log(this.state.fruits[0])\n    return () =>  (\n      <Wrapper>\n        <Title>Fruits List</Title>\n        {this.state.fruits.map(fruits => {\n         \n          <FruitsCard\n          key={fruits.id}\n          id={fruits.id}\n          name={fruits.name}\n          image={fruits.image}\n          clicked={fruits.clicked}\n          OnClick={this.saveHandleClick}\n          />\n        })\n      }\n      </Wrapper>\n    );\n  }\n}\n\nexport default App;\n"]},"metadata":{},"sourceType":"module"}