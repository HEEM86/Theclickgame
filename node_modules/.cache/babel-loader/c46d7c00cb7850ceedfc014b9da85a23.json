{"ast":null,"code":"import { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nvar _jsxFileName = \"C:\\\\Users\\\\HEEM\\\\Desktop\\\\HomeWork\\\\Theclickgame\\\\src\\\\App.js\";\nimport React, { Component } from \"react\";\nimport FruitsCard from \"./components/FruitsCard\";\nimport Wrapper from \"./components/Wrapper\";\nimport Title from \"./components/Title\";\nimport fruits from \"./fruits.json\";\n\nclass App extends Component {\n  constructor(...args) {\n    super(...args);\n    this.state = {\n      isGuessCorrect: true,\n      fruits: fruits,\n      score: 0,\n      maxScore: 12,\n      message: \"Click on an image to begin\"\n    };\n\n    this.saveHandleClick = id => {\n      const fruits = this.state.fruits;\n      const fruitsClicked = fruits.filter(fruits => fruits.id === id);\n    };\n  }\n\n  // Map over this.state.fruits and render a fruitCard component for each fruit object\n  render() {\n    console.log(this.state.fruits);\n    return () => /*#__PURE__*/_jsxDEV(Wrapper, {\n      children: [/*#__PURE__*/_jsxDEV(Title, {\n        children: \"Fruits List\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 29,\n        columnNumber: 9\n      }, this), this.state.fruits.map(fruits => {\n        /*#__PURE__*/\n        _jsxDEV(FruitsCard, {\n          id: fruits.id,\n          name: fruits.name,\n          image: fruits.image,\n          clicked: fruits.clicked,\n          OnClick: this.saveHandleClick\n        }, fruits.id, false, {\n          fileName: _jsxFileName,\n          lineNumber: 32,\n          columnNumber: 11\n        }, this);\n      })]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 28,\n      columnNumber: 7\n    }, this);\n  }\n\n}\n\nexport default App;","map":{"version":3,"sources":["C:/Users/HEEM/Desktop/HomeWork/Theclickgame/src/App.js"],"names":["React","Component","FruitsCard","Wrapper","Title","fruits","App","state","isGuessCorrect","score","maxScore","message","saveHandleClick","id","fruitsClicked","filter","render","console","log","map","name","image","clicked"],"mappings":";;AAAA,OAAOA,KAAP,IAAgBC,SAAhB,QAAiC,OAAjC;AACA,OAAOC,UAAP,MAAuB,yBAAvB;AACA,OAAOC,OAAP,MAAoB,sBAApB;AACA,OAAOC,KAAP,MAAkB,oBAAlB;AACA,OAAOC,MAAP,MAAmB,eAAnB;;AAEA,MAAMC,GAAN,SAAkBL,SAAlB,CAA4B;AAAA;AAAA;AAAA,SAExBM,KAFwB,GAEhB;AACNC,MAAAA,cAAc,EAAE,IADV;AAENH,MAAAA,MAAM,EAAEA,MAFF;AAGNI,MAAAA,KAAK,EAAE,CAHD;AAINC,MAAAA,QAAQ,EAAE,EAJJ;AAKNC,MAAAA,OAAO,EAAE;AALH,KAFgB;;AAAA,SAa1BC,eAb0B,GAaRC,EAAE,IAAI;AACtB,YAAMR,MAAM,GAAG,KAAKE,KAAL,CAAWF,MAA1B;AACA,YAAMS,aAAa,GAAGT,MAAM,CAACU,MAAP,CAAcV,MAAM,IAAIA,MAAM,CAACQ,EAAP,KAAcA,EAAtC,CAAtB;AACD,KAhByB;AAAA;;AAiB1B;AACAG,EAAAA,MAAM,GAAG;AACPC,IAAAA,OAAO,CAACC,GAAR,CAAY,KAAKX,KAAL,CAAWF,MAAvB;AACA,WAAO,mBACL,QAAC,OAAD;AAAA,8BACE,QAAC,KAAD;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,cADF,EAEG,KAAKE,KAAL,CAAWF,MAAX,CAAkBc,GAAlB,CAAsBd,MAAM,IAAI;AAE/B;AAAA,gBAAC,UAAD;AAEA,UAAA,EAAE,EAAEA,MAAM,CAACQ,EAFX;AAGA,UAAA,IAAI,EAAER,MAAM,CAACe,IAHb;AAIA,UAAA,KAAK,EAAEf,MAAM,CAACgB,KAJd;AAKA,UAAA,OAAO,EAAEhB,MAAM,CAACiB,OALhB;AAMA,UAAA,OAAO,EAAE,KAAKV;AANd,WACKP,MAAM,CAACQ,EADZ;AAAA;AAAA;AAAA;AAAA;AAQD,OAVA,CAFH;AAAA;AAAA;AAAA;AAAA;AAAA,YADF;AAiBD;;AArCyB;;AAwC5B,eAAeP,GAAf","sourcesContent":["import React, { Component } from \"react\";\nimport FruitsCard from \"./components/FruitsCard\";\nimport Wrapper from \"./components/Wrapper\";\nimport Title from \"./components/Title\";\nimport fruits from \"./fruits.json\";\n\nclass App extends Component {\n  // Setting this.state.fruits to the fruits json array\n    state = {\n      isGuessCorrect: true,\n      fruits: fruits,\n      score: 0,\n      maxScore: 12,\n      message: \"Click on an image to begin\"\n\n    \n  }\n\n\n  saveHandleClick = id => {\n    const fruits = this.state.fruits;\n    const fruitsClicked = fruits.filter(fruits => fruits.id === id);\n  }\n  // Map over this.state.fruits and render a fruitCard component for each fruit object\n  render() {\n    console.log(this.state.fruits)\n    return () =>  (\n      <Wrapper>\n        <Title>Fruits List</Title>\n        {this.state.fruits.map(fruits => {\n         \n          <FruitsCard\n          key={fruits.id}\n          id={fruits.id}\n          name={fruits.name}\n          image={fruits.image}\n          clicked={fruits.clicked}\n          OnClick={this.saveHandleClick}\n          />\n        })\n      }\n      </Wrapper>\n    );\n  }\n}\n\nexport default App;\n"]},"metadata":{},"sourceType":"module"}